#!/usr/bin/env python3

import argparse
import os
import sys

def parseArgs():
    parser = argparse.ArgumentParser(
        description=('Configure /boot/wpa_supplicant.conf ' +
            'with a given network name and password such that the pifi will automatically ' +
            'attempt to join that network upon its next reboot. Can be run from laptop or ' +
            'pi. If run from laptop, must specify --device-path. See: ' +
            'https://raspberrypi.stackexchange.com/a/57023'),
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )
    parser.add_argument('--wifi-network-name', dest='wifi_network_name', action='store', required = True,
        help='Name of the network to join')
    parser.add_argument('--wifi-password', dest='wifi_password', action='store', required = True,
        help='Password of the network to join')
    parser.add_argument('--wifi-country-code', dest='wifi_country_code', action='store', default='US',
        help='Your ISO-3166-1 two-letter country code. See: ' +
        'https://www.iso.org/obp/ui/#search')
    parser.add_argument('--device-path', dest='device_path', action='store', default='/boot',
        help='Mounted volume path after SD card has been imaged. Only applicable / useful if you are running ' +
        'this script on a laptop / desktop to image the SD card for the first time. If running this script on a ' +
        'raspberry pi, do not use this argument.')
    parser.add_argument('--wpa-supplicant', dest='wpa_supplicant', action='store_true',
        help='Whether to use the legacy wpa_supplicant method of setting up wifi (Debian 11 and older)')

    args = parser.parse_args()
    args.device_path = args.device_path.rstrip('/')
    return args

def setupWifi():
    if args.wpa_supplicant:
        setupWpaSupplicantWifi()
    else:
        setupNewWifi()

def setupWpaSupplicantWifi():
    f = None
    try:
        f = open(f"{args.device_path}/wpa_supplicant.conf", "w")
    except PermissionError:
        print("This script must be run as sudo", file = sys.stderr)
        sys.exit(1)

    f.write(f"""country={args.wifi_country_code}
    ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
    update_config=1
    network={{
      ssid="{args.wifi_network_name}"
      psk="{args.wifi_password}"
      key_mgmt=WPA-PSK
    }}""")
    f.close()

def setupNewWifi():
    f = None
    try:
        f = open(f"{args.device_path}/firstrun.sh", "w")
    except PermissionError:
        print("This script must be run as sudo", file = sys.stderr)
        sys.exit(1)

    f.write(f"""#!/usr/bin/env bash

set -euo pipefail -o errtrace

cat >/etc/NetworkManager/system-connections/wifi.nmconnection <<EOF
[connection]
id=wifi
uuid=95b17351-297c-4d9c-90f9-669d3ab81464
type=wifi

[wifi]
mode=infrastructure
ssid={args.wifi_network_name}

[wifi-security]
key-mgmt=wpa-psk
psk={args.wifi_password}

[ipv4]
method=auto

[ipv6]
addr-gen-mode=default
method=auto

[proxy]
EOF
chmod 600 /etc/NetworkManager/system-connections/wifi.nmconnection
""")
    f.close()
    os.chmod(f"{args.device_path}/firstrun.sh", 0o777)

if os.getuid() != 0:
    print("This script must be run as sudo", file = sys.stderr)
    sys.exit(1)

args = parseArgs()
setupWifi()
