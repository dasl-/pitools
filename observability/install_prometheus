#!/usr/bin/env bash

set -euo pipefail -o errtrace
INSTALL_DIR="/home/pi/observability"
VERSION_NUMBER='2.45.0'

# Binary for 32-bit Raspbian OS - do not use this (see below)!
# It works, but after ~7 days of data, it will result in memory allocation errors.
PROMETHEUS_VERSION="$VERSION_NUMBER.linux-armv7"

# Note: prometheus should be installed on a 64-bit OS using the 64-bit binary, otherwise you
# will run into memory allocation errors. I didn't notice the memory allocation errors
# immediately - it took about a week of collecting the default set of node_exporter
# metrics on 15 raspberry pis before the prometheus metrics DB got large enough that memory
# allocation errors started occuring. The size of the metrics DB had to reach about 1GB
# before I experienced errors.
#
# See:
# https://discuss.prometheus.io/t/prometheus-crashes-during-compaction-process/141/2
# https://github.com/prometheus/prometheus/issues/8661#issuecomment-866036262
# https://groups.google.com/g/prometheus-users/c/WhC8hTLKwtM/m/5F8heH9XAgAJ
if [[ $(getconf LONG_BIT)  == '64' ]] ; then
    PROMETHEUS_VERSION="$VERSION_NUMBER.linux-arm64"
else
    warn "\\nYou are installing prometheus on a 32-bit OS. This may result in memory allocation errors that will cause prometheus to crash! We recommend using a 64-bit OS."
fi


main(){
    trap 'fail $? $LINENO' ERR

    # https://prometheus.io/docs/guides/node-exporter/#configuring-your-prometheus-instances
    info "\\nInstalling prometheus..."

    downloadBinary
    setupConfigFile
    setupSystemd

    local prometheus_url
    prometheus_url="http://$(hostname).local:9090/graph"
    info "\\nFinished installing prometheus. Wait ~5 seconds for it to be ready; then view metrics at: $prometheus_url"
}

downloadBinary(){
    info "\\nDownloading prometheus binary..."
    mkdir -p $INSTALL_DIR
    pushd $INSTALL_DIR
    rm -rf "prometheus-$PROMETHEUS_VERSION.tar.gz"
    wget "https://github.com/prometheus/prometheus/releases/download/v$VERSION_NUMBER/prometheus-$PROMETHEUS_VERSION.tar.gz"
    tar xvfz "prometheus-$PROMETHEUS_VERSION.tar.gz"
    rm -rf "prometheus-$PROMETHEUS_VERSION.tar.gz"
    popd
}

setupConfigFile(){
    info "\\nSetting up config file: $INSTALL_DIR/prometheus.yml ..."
cat <<-EOF | sudo tee "$INSTALL_DIR/prometheus.yml" >/dev/null
# my global config
global:
  scrape_interval: 10s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 10s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label \`job=<job_name>\` to any timeseries scraped from this config.
  - job_name: "node"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: [
            "study:9100",
            "study:9101",
            "pifi:9100",
            "kitchen:9100",
            "scaredycat:9100",
            "bedroom:9100",
            "piwall:9100",
            "piwall1:9100",
            "piwall2:9100",
            "piwall3:9100",
            "piwall4:9100",
            "piwall5:9100",
            "piwall6:9100",
            "piwall7:9100",
            "piwall8:9100",
            "piwall9:9100",
            "piwall10:9100",
        ]

    # Remove the port number suffix from the instance labels
    relabel_configs:
      - source_labels: [__address__]
        regex: "([^:]+):\\\\d+"
        target_label: instance

storage:
  tsdb:
    # https://promlabs.com/blog/2022/10/05/whats-new-in-prometheus-2-39/#experimental-out-of-order-ingestion
    # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#tsdb
    # https://github.com/dasl-/pitools/blob/main/observability/README.adoc#timestamped_exporter
    out_of_order_time_window: 1d
EOF
}

setupSystemd(){
    info "\\nSetting up systemd..."

cat <<-EOF | sudo tee /etc/systemd/system/prometheus.service >/dev/null
[Unit]
Description=prometheus
After=network-online.target
Wants=network-online.target

[Service]
Environment=HOME=/root
# Writing tsdb to USB external SSD improves performance vs SD card.
ExecStart=$INSTALL_DIR/prometheus-$PROMETHEUS_VERSION/prometheus --config.file=$INSTALL_DIR/prometheus.yml --storage.tsdb.path=/ssd/prometheus-data --storage.tsdb.retention.time=5y
Restart=on-failure
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=PROMETHEUS

[Install]
WantedBy=multi-user.target
EOF

    sudo chown root:root /etc/systemd/system/prometheus.service
    sudo chmod 644 /etc/systemd/system/prometheus.service
    sudo systemctl enable /etc/systemd/system/prometheus.service
    sudo systemctl daemon-reload
    sudo systemctl restart prometheus.service
}

fail(){
    local exit_code=$1
    local line_no=$2
    local script_name
    script_name=$(basename "${BASH_SOURCE[0]}")
    die "Error in $script_name at line number: $line_no with exit code: $exit_code"
}

info(){
    echo -e "\x1b[32m$*\x1b[0m" # green stdout
}

warn(){
    echo -e "\x1b[33m$*\x1b[0m" # yellow stdout
}

die(){
    echo
    echo -e "\x1b[31m$*\x1b[0m" >&2 # red stderr
    exit 1
}

main "$@"
