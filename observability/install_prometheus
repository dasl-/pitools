#!/usr/bin/env bash

set -euo pipefail -o errtrace
INSTALL_DIR="/home/pi/observability"
VERSION_NUMBER='2.45.0'
PROMETHEUS_VERSION="$VERSION_NUMBER.linux-armv7"

main(){
    trap 'fail $? $LINENO' ERR

    # https://prometheus.io/docs/guides/node-exporter/#configuring-your-prometheus-instances
    info "\\nInstalling prometheus..."

    downloadBinary
    setupConfigFile
    setupSystemd

    local prometheus_url
    prometheus_url="http://$(hostname).local:9090/graph"
    info "\\nFinished installing prometheus. Wait ~5 seconds for it to be ready; then view metrics at: $prometheus_url"
}

downloadBinary(){
    info "\\nDownloading prometheus binary..."
    mkdir -p $INSTALL_DIR
    pushd $INSTALL_DIR
    rm -rf "prometheus-$PROMETHEUS_VERSION.tar.gz"
    wget "https://github.com/prometheus/prometheus/releases/download/v$VERSION_NUMBER/prometheus-$PROMETHEUS_VERSION.tar.gz"
    tar xvfz "prometheus-$PROMETHEUS_VERSION.tar.gz"
    rm -rf "prometheus-$PROMETHEUS_VERSION.tar.gz"
    popd
}

setupConfigFile(){
    info "\\nSetting up config file: $INSTALL_DIR/prometheus.yml ..."
cat <<-EOF | sudo tee "$INSTALL_DIR/prometheus.yml" >/dev/null
# my global config
global:
  scrape_interval: 10s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 10s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# A scrape configuration containing exactly one endpoint to scrape:
scrape_configs:
  # The job name is added as a label \`job=<job_name>\` to any timeseries scraped from this config.
  - job_name: "node"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["study:9100"]
EOF
}

setupSystemd(){
    info "\\nSetting up systemd..."

cat <<-EOF | sudo tee /etc/systemd/system/prometheus.service >/dev/null
[Unit]
Description=prometheus
After=network-online.target
Wants=network-online.target

[Service]
Environment=HOME=/root
ExecStart=$INSTALL_DIR/prometheus-$PROMETHEUS_VERSION/prometheus --config.file=$INSTALL_DIR/prometheus.yml --storage.tsdb.path=$INSTALL_DIR/prometheus-data
Restart=on-failure
StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=PROMETHEUS

[Install]
WantedBy=multi-user.target
EOF

    sudo chown root:root /etc/systemd/system/prometheus.service
    sudo chmod 644 /etc/systemd/system/prometheus.service
    sudo systemctl enable /etc/systemd/system/prometheus.service
    sudo systemctl daemon-reload
    sudo systemctl restart prometheus.service
}

fail(){
    local exit_code=$1
    local line_no=$2
    local script_name
    script_name=$(basename "${BASH_SOURCE[0]}")
    die "Error in $script_name at line number: $line_no with exit code: $exit_code"
}

info(){
    echo -e "\x1b[32m$*\x1b[0m" # green stdout
}

warn(){
    echo -e "\x1b[33m$*\x1b[0m" # yellow stdout
}

die(){
    echo
    echo -e "\x1b[31m$*\x1b[0m" >&2 # red stderr
    exit 1
}

main "$@"
